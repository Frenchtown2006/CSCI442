##abdulrahman alhitmi
##amanda hawkins

import numpy as np
import cv2 as cv

#import picture
img = cv.imread("final.jpg", cv.IMREAD_COLOR)
copy = cv.imread("final.jpg", cv.IMREAD_COLOR)


#gray original picture + blur + canny
gray = cv.cvtColor(img, cv.COLOR_BGR2GRAY)
gray = cv.GaussianBlur(gray,(5,5),0)
gray = cv.Canny(gray,35,50)


#red bounds
lower_red = np.array([169,100,100])
upper_red = np.array([189,255,255])

#red mask
red = cv.inRange(copy, lower_red, upper_red)

#red res
res = cv.bitwise_and(copy, copy, red)


#gray copy picture
gray2 = cv.cvtColor(copy, cv.COLOR_RGB2GRAY)
gray2 = cv.bilateralFilter(gray2,9,75,75)
gray2 = cv.addWeighted(gray,1.5,gray2,-0.5,0)
gray2 = cv.bilateralFilter(gray2,9,75,75)


##gray2 = cv.Canny(gray2,50,100)
##gray2 = cv.dilate(gray2, None, iterations = 1)
##gray2 = cv.erode(gray2, None, iterations = 1)

#red bound
##lower_red = np.array([169,100,100])
##upper_red = np.array([189,255,255])

#yellow bound
##lower_yellow = np.array([20,100,100], dtype = np.uint8)
##upper_yellow = np.array([30,255,255], dtype = np.uint8)

#orange bound
##lower_orange = np.array([0,160,190], dtype = np.uint8)
##upper_orange = np.array([10,250,255], dtype =np.uint8)


#red + yellow + orange mask
##red = cv.inRange(copy, lower_red, upper_red)
##yellow = cv.inRange(copy, lower_yellow, upper_yellow)
##orange = cv.inRange(hsv, lower_orange, upper_orange)


#combined masks
#combined1 = cv.add(red,yellow, copy)
#combined2 = cv.add(mask3, combined1, img)

#res = cv.bitwise_and(copy, copy, red)


#circle for copy picture (gray 2)
row = gray2.shape[0]
circles = cv.HoughCircles(gray2, cv.HOUGH_GRADIENT, 1,10,
                          param1=100, param2=30, minRadius=1, maxRadius=30)

if circles is not None:
        circles = np.uint16(np.around(circles))
        for i in circles[0, :]:
            center = (i[0], i[1])
            # circle center
            cv.circle(copy, center, 1, (0, 100, 100), 3)
            # circle outline
            radius = i[2]
            cv.circle(copy, center, radius, (0, 255, 0), 3)
        print(circles.shape[1])


# circle for original picture (gray 1)
rows = gray.shape[0]
circles = cv.HoughCircles(gray, cv.HOUGH_GRADIENT,1,10,
                          param1=358, param2=30, minRadius=1, maxRadius=30)

if circles is not None:
        circles = np.uint16(np.around(circles))
        for i in circles[0, :]:
            center = (i[0], i[1])
            # circle center
            cv.circle(img, center, 1, (100, 100, 100), 3)
            # circle outline
            radius = i[2]
            cv.circle(img, center, radius, (255, 0, 255), 3)
        print(circles.shape[1])


cv.imshow("original",img)
cv.imshow("copy", copy)

#cv.imshow("gray2", gray2)
##cv.imshow("yellow", yellow)
##cv.imshow("orange", orange)
#cv.imshow("combined", combined1)
##cv.imshow("combined2", combined2)
cv.waitKey(0)
